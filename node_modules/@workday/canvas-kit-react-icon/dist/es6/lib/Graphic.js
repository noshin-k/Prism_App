var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import { CanvasIconTypes } from '@workday/design-assets-types';
import Svg from './Svg';
export var graphicStyles = function (_a) {
    var width = _a.width, height = _a.height, grow = _a.grow;
    if (grow) {
        return {
            width: '100%',
            '& svg': {
                width: '100%',
                height: '100%',
            },
        };
    }
    if (width) {
        return {
            '& svg': {
                width: width,
                height: '100%',
            },
        };
    }
    else if (height) {
        return {
            '& svg': {
                height: height,
                width: '100%',
            },
        };
    }
    return {};
};
var Graphic = (function (_super) {
    __extends(Graphic, _super);
    function Graphic() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Graphic.prototype.render = function () {
        var _a = this.props, src = _a.src, width = _a.width, height = _a.height, grow = _a.grow, elemProps = __rest(_a, ["src", "width", "height", "grow"]);
        return (React.createElement(Svg, { src: src, styles: graphicStyles({ width: width, height: height, grow: grow }), type: CanvasIconTypes.Graphic, elemProps: elemProps }));
    };
    return Graphic;
}(React.Component));
export default Graphic;
