"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var styled_1 = __importDefault(require("@emotion/styled"));
var core_1 = require("@emotion/core");
var focus_trap_js_1 = __importDefault(require("focus-trap-js"));
var canvas_kit_react_popup_1 = __importDefault(require("@workday/canvas-kit-react-popup"));
var fadeIn = core_1.keyframes(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  from {\n    background: none;\n  }\n  to {\n    background: rgba(0,0,0,0.65);\n  }\n"], ["\n  from {\n    background: none;\n  }\n  to {\n    background: rgba(0,0,0,0.65);\n  }\n"])));
var Container = styled_1.default('div')({
    position: 'fixed',
    top: 0,
    left: 0,
    width: '100vw',
    height: '100vh',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    background: 'rgba(0,0,0,0.65)',
    animationName: "" + fadeIn,
    animationDuration: '0.3s',
    zIndex: 1,
});
var transformOrigin = {
    horizontal: 'center',
    vertical: 'bottom',
};
function getFirstElementToFocus(modalEl) {
    var firstFocusable = modalEl.querySelector("[data-close=close],[id=\"" + modalEl.getAttribute('aria-labelledby') + "\"]");
    if (firstFocusable) {
        if (firstFocusable.tagName === 'H3') {
            firstFocusable.tabIndex = 0;
            firstFocusable.style.outline = 'none';
            var changeTabIndex_1 = function () {
                firstFocusable.removeEventListener('blur', changeTabIndex_1);
                requestAnimationFrame(function () {
                    firstFocusable.removeAttribute('tabIndex');
                });
            };
            firstFocusable.addEventListener('blur', changeTabIndex_1);
        }
        return firstFocusable;
    }
    else {
        throw new Error('No focusable element was found. Please ensure modal has at least one focusable element');
    }
}
var useKeyDownListener = function (handleKeydown) {
    React.useLayoutEffect(function () {
        document.addEventListener('keydown', handleKeydown);
        return function () {
            document.removeEventListener('keydown', handleKeydown);
        };
    }, [handleKeydown]);
};
var useInitialFocus = function (modalRef, firstFocusRef) {
    var handlerRef = document.activeElement instanceof HTMLElement ? document.activeElement : null;
    React.useLayoutEffect(function () {
        if (modalRef.current) {
            var elem = (firstFocusRef && firstFocusRef.current) || getFirstElementToFocus(modalRef.current);
            elem.focus();
        }
        return function () {
            if (handlerRef) {
                handlerRef.focus();
            }
        };
    }, [modalRef, firstFocusRef]);
};
var ModalContent = function (_a) {
    var handleClose = _a.handleClose, children = _a.children, closeOnEscape = _a.closeOnEscape, firstFocusRef = _a.firstFocusRef, width = _a.width, heading = _a.heading, padding = _a.padding, elemProps = __rest(_a, ["handleClose", "children", "closeOnEscape", "firstFocusRef", "width", "heading", "padding"]);
    var modalRef = React.useRef(null);
    var handleKeydown = function (event) {
        if (modalRef.current) {
            focus_trap_js_1.default(event, modalRef.current);
        }
        if (closeOnEscape && handleClose && (event.key === 'Esc' || event.key === 'Escape')) {
            handleClose();
        }
    };
    useKeyDownListener(handleKeydown);
    useInitialFocus(modalRef, firstFocusRef);
    var handleOutsideClick = function (_a) {
        var target = _a.target;
        var modalEl = modalRef.current;
        if (modalEl && !modalEl.contains(target) && handleClose) {
            handleClose();
        }
    };
    return (React.createElement(Container, __assign({ onClick: handleOutsideClick }, elemProps),
        React.createElement(canvas_kit_react_popup_1.default, { popupRef: modalRef, width: width, heading: heading, handleClose: handleClose, padding: padding, transformOrigin: transformOrigin }, children)));
};
exports.default = ModalContent;
var templateObject_1;
