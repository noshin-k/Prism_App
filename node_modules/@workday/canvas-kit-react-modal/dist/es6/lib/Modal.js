var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import { PopupPadding } from '@workday/canvas-kit-react-popup';
import ModalContent from './ModalContent';
export var ModalWidth;
(function (ModalWidth) {
    ModalWidth["s"] = "440px";
    ModalWidth["m"] = "800px";
})(ModalWidth || (ModalWidth = {}));
var Modal = function (_a) {
    var open = _a.open, modalContentProps = __rest(_a, ["open"]);
    return open ? React.createElement(ModalContent, __assign({}, modalContentProps)) : null;
};
Modal.Padding = PopupPadding;
Modal.Width = ModalWidth;
Modal.defaultProps = {
    open: false,
    padding: Modal.Padding.l,
    width: Modal.Width.s,
    closeOnEscape: true,
};
export default Modal;
export function useModal() {
    var _a = React.useState(false), open = _a[0], setOpen = _a[1];
    return {
        targetProps: {
            onClick: function () {
                setOpen(true);
            },
        },
        closeModal: function () {
            setOpen(false);
        },
        modalProps: {
            open: open,
            handleClose: function () {
                setOpen(false);
            },
        },
    };
}
