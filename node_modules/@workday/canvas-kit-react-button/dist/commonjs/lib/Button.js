'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.deprecated_Button = undefined;

var _core = require('@emotion/core');

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _ButtonBase = require('./ButtonBase');

var _types = require('./types');

var _ButtonStyles = require('./ButtonStyles');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var __extends = undefined && undefined.__extends || function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
            d.__proto__ = b;
        } || function (d, b) {
            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __assign = undefined && undefined.__assign || function () {
    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = undefined && undefined.__rest || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};

var Button = function (_super) {
    __extends(Button, _super);
    function Button() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Button.prototype.render = function () {
        var _a = this.props,
            variant = _a.variant,
            size = _a.size,
            buttonRef = _a.buttonRef,
            dataLabel = _a.dataLabel,
            icon = _a.icon,
            children = _a.children,
            elemProps = __rest(_a, ["variant", "size", "buttonRef", "dataLabel", "icon", "children"]);
        if (variant === _types.ButtonVariant.Highlight && (icon === undefined || size === _types.ButtonSize.Small)) {
            return null;
        }
        return (0, _core.jsx)(_ButtonBase.ButtonBaseCon, __assign({ variant: variant, size: size, ref: buttonRef }, elemProps), icon && (0, _core.jsx)(_ButtonBase.ButtonLabelIcon, { size: size, icon: icon }), (0, _core.jsx)(_ButtonBase.ButtonBaseLabel, { size: size, variant: variant }, children), dataLabel && (0, _core.jsx)(_ButtonBase.ButtonLabelData, { size: size, className: _ButtonStyles.labelDataBaseStyles.classname }, dataLabel));
    };
    Button.Variant = _types.ButtonVariant;
    Button.Size = _types.ButtonSize;
    Button.defaultProps = {
        size: _types.ButtonSize.Medium,
        variant: _types.ButtonVariant.Secondary,
        grow: false
    };
    return Button;
}(React.Component);
exports.default = Button;

var deprecated_Button = function (_super) {
    __extends(deprecated_Button, _super);
    function deprecated_Button() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    deprecated_Button.prototype.componentDidMount = function () {
        console.warn('This component is now deprecated, consider using the new Button component');
    };
    deprecated_Button.prototype.render = function () {
        var _a = this.props,
            variant = _a.variant,
            size = _a.size,
            buttonRef = _a.buttonRef,
            dataLabel = _a.dataLabel,
            icon = _a.icon,
            children = _a.children,
            elemProps = __rest(_a, ["variant", "size", "buttonRef", "dataLabel", "icon", "children"]);
        return (0, _core.jsx)(Button, __assign({}, this.props, elemProps));
    };
    deprecated_Button.Variant = _types.DeprecatedButtonVariant;
    deprecated_Button.Size = _types.ButtonSize;
    deprecated_Button.defaultProps = {
        size: _types.ButtonSize.Large,
        variant: _types.DeprecatedButtonVariant.Secondary,
        grow: false
    };
    return deprecated_Button;
}(React.Component);
exports.deprecated_Button = deprecated_Button;