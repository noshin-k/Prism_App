var __assign = this && this.__assign || function () {
    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var _a;
import canvas from '@workday/canvas-kit-react-core';
import { DeprecatedButtonVariant, TextButtonVariant, ButtonVariant, IconButtonVariant } from './types';
export var ButtonColors = (_a = {}, _a[DeprecatedButtonVariant.Primary] = canvas.buttonColors.primary, _a[DeprecatedButtonVariant.Secondary] = canvas.buttonColors.secondary, _a[DeprecatedButtonVariant.Delete] = __assign({}, canvas.buttonColors.delete, { focusBorder: canvas.colors.cinnamon500, activeBorder: canvas.colors.cinnamon500 }), _a[ButtonVariant.Primary] = {
    background: canvas.colors.blueberry400,
    border: 'transparent',
    text: canvas.colors.frenchVanilla100,
    activeBackground: canvas.colors.blueberry600,
    activeBorder: 'transparent',
    activeText: canvas.colors.frenchVanilla100,
    disabledBackground: canvas.colors.blueberry200,
    disabledBorder: 'transparent',
    disabledText: canvas.colors.frenchVanilla100,
    focusBackground: canvas.colors.blueberry400,
    focusBorder: 'transparent',
    focusText: canvas.colors.frenchVanilla100,
    hoverBackground: canvas.colors.blueberry500,
    hoverBorder: 'transparent',
    hoverText: canvas.colors.frenchVanilla100,
    labelIcon: canvas.colors.frenchVanilla100,
    labelIconHover: canvas.colors.frenchVanilla100,
    labelIconActive: canvas.colors.frenchVanilla100,
    labelIconFocus: canvas.colors.frenchVanilla100,
    labelIconDisabled: canvas.colors.frenchVanilla100
}, _a[ButtonVariant.Secondary] = {
    background: canvas.colors.soap200,
    border: 'transparent',
    text: canvas.colors.blackPepper400,
    activeBackground: canvas.colors.soap500,
    activeBorder: 'transparent',
    activeText: canvas.colors.blackPepper400,
    disabledBackground: canvas.colors.soap100,
    disabledBorder: 'transparent',
    disabledText: canvas.colors.licorice100,
    focusBackground: canvas.colors.soap200,
    focusBorder: 'transparent',
    focusText: canvas.colors.blackPepper400,
    hoverBackground: canvas.colors.soap400,
    hoverBorder: 'transparent',
    hoverText: canvas.colors.blackPepper400,
    labelIcon: canvas.colors.licorice200,
    labelIconHover: canvas.colors.licorice500,
    labelIconActive: canvas.colors.licorice500,
    labelIconFocus: canvas.colors.licorice200,
    labelIconDisabled: canvas.colors.soap600,
    labelData: canvas.colors.blackPepper400,
    labelDataDisabled: canvas.colors.licorice100
}, _a[ButtonVariant.Delete] = {
    background: canvas.colors.cinnamon500,
    border: canvas.colors.cinnamon500,
    text: canvas.colors.frenchVanilla100,
    activeBackground: '#80160E',
    activeBorder: 'transparent',
    activeText: canvas.colors.frenchVanilla100,
    disabledBackground: canvas.colors.cinnamon200,
    disabledBorder: 'transparent',
    disabledText: canvas.colors.frenchVanilla100,
    focusBackground: canvas.colors.cinnamon500,
    focusText: canvas.colors.frenchVanilla100,
    hoverBackground: canvas.colors.cinnamon600,
    hoverBorder: canvas.colors.cinnamon600,
    hoverText: canvas.colors.frenchVanilla100
}, _a[ButtonVariant.Highlight] = {
    background: canvas.colors.soap200,
    border: canvas.colors.soap200,
    text: canvas.colors.blueberry500,
    activeBackground: canvas.colors.soap500,
    activeBorder: 'transparent',
    activeText: canvas.colors.blueberry500,
    disabledBackground: canvas.colors.soap100,
    disabledBorder: 'transparent',
    disabledText: canvas.colors.licorice100,
    focusBackground: canvas.colors.soap200,
    focusBorder: 'transparent',
    focusText: canvas.colors.blueberry500,
    hoverBackground: canvas.colors.soap400,
    hoverBorder: 'transparent',
    hoverText: canvas.colors.blueberry500,
    labelIcon: canvas.colors.blueberry500,
    labelIconHover: canvas.colors.blueberry500,
    labelIconActive: canvas.colors.blueberry500,
    labelIconFocus: canvas.colors.blueberry500,
    labelIconDisabled: canvas.colors.soap600
}, _a[ButtonVariant.OutlinePrimary] = {
    background: 'transparent',
    border: canvas.colors.blueberry400,
    text: canvas.colors.blueberry400,
    activeBackground: canvas.colors.blueberry500,
    activeBorder: 'transparent',
    activeText: canvas.colors.frenchVanilla100,
    disabledBackground: canvas.colors.frenchVanilla100,
    disabledBorder: canvas.colors.soap500,
    disabledText: canvas.colors.licorice100,
    focusBackground: canvas.colors.blueberry400,
    focusBorder: 'transparent',
    focusText: canvas.colors.frenchVanilla100,
    hoverBackground: canvas.colors.blueberry400,
    hoverBorder: 'transparent',
    hoverText: canvas.colors.frenchVanilla100,
    labelIcon: canvas.colors.blueberry400,
    labelIconHover: canvas.colors.frenchVanilla100,
    labelIconActive: canvas.colors.frenchVanilla100,
    labelIconFocus: canvas.colors.frenchVanilla100,
    labelIconDisabled: canvas.colors.soap600
}, _a[ButtonVariant.OutlineSecondary] = {
    background: 'transparent',
    border: canvas.colors.soap500,
    text: canvas.colors.blackPepper400,
    activeBackground: canvas.colors.licorice600,
    activeBorder: 'transparent',
    activeText: canvas.colors.frenchVanilla100,
    disabledBackground: canvas.colors.frenchVanilla100,
    disabledBorder: canvas.colors.soap500,
    disabledText: canvas.colors.licorice100,
    focusBackground: canvas.colors.licorice500,
    focusBorder: 'transparent',
    focusText: canvas.colors.frenchVanilla100,
    hoverBackground: canvas.colors.licorice500,
    hoverBorder: 'transparent',
    hoverText: canvas.colors.frenchVanilla100,
    labelIcon: canvas.colors.licorice200,
    labelIconHover: canvas.colors.frenchVanilla100,
    labelIconActive: canvas.colors.frenchVanilla100,
    labelIconFocus: canvas.colors.frenchVanilla100,
    labelIconDisabled: canvas.colors.soap600
}, _a[ButtonVariant.OutlineInverse] = {
    background: 'transparent',
    border: canvas.colors.frenchVanilla100,
    text: canvas.colors.frenchVanilla100,
    activeBackground: canvas.colors.soap300,
    activeBorder: 'transparent',
    activeText: canvas.colors.blackPepper400,
    disabledBackground: 'transparent',
    disabledBorder: 'rgba(255, 255, 255, 0.75)',
    disabledText: 'rgba(255, 255, 255, 0.75)',
    focusBackground: canvas.colors.frenchVanilla100,
    focusBorder: 'transparent',
    focusRingInner: 'currentColor',
    focusRingOuter: canvas.colors.frenchVanilla100,
    focusText: canvas.colors.blackPepper400,
    hoverBackground: canvas.colors.frenchVanilla100,
    hoverBorder: 'transparent',
    hoverText: canvas.colors.blackPepper400,
    labelIcon: canvas.colors.frenchVanilla100,
    labelIconHover: canvas.colors.licorice500,
    labelIconActive: canvas.colors.licorice500,
    labelIconFocus: canvas.colors.licorice500,
    labelIconDisabled: 'rgba(255, 255, 255, 0.75)',
    labelDataHover: canvas.colors.licorice300,
    labelDataActive: canvas.colors.licorice300,
    labelDataFocus: canvas.colors.licorice300,
    labelDataDisabled: 'rgba(255, 255, 255, 0.75)'
}, _a[TextButtonVariant.Default] = {
    background: 'transparent',
    border: 'transparent',
    text: canvas.colors.blueberry400,
    activeBackground: 'transparent',
    activeBorder: 'transparent',
    activeText: canvas.colors.blueberry500,
    disabledBackground: 'transparent',
    disabledBorder: 'transparent',
    disabledText: 'rgba(8, 117, 225, 0.5)',
    focusBackground: 'transparent',
    focusText: canvas.colors.blueberry400,
    hoverBorder: 'transparent',
    hoverText: canvas.colors.blueberry500,
    labelIcon: canvas.colors.blueberry400,
    labelIconHover: canvas.colors.blueberry500,
    labelIconActive: canvas.colors.blueberry500,
    labelIconFocus: canvas.colors.blueberry400,
    labelIconDisabled: 'rgba(8, 117, 225, 0.5)'
}, _a[TextButtonVariant.Inverse] = {
    background: 'transparent',
    border: 'transparent',
    text: canvas.colors.frenchVanilla100,
    activeBackground: 'transparent',
    activeBorder: 'transparent',
    activeText: canvas.colors.frenchVanilla100,
    disabledBackground: 'transparent',
    disabledBorder: 'transparent',
    disabledText: 'rgba(255, 255, 255, 0.5)',
    focusBackground: 'transparent',
    focusText: canvas.colors.frenchVanilla100,
    focusRingInner: 'transparent',
    focusRingOuter: canvas.colors.frenchVanilla100,
    hoverBorder: 'transparent',
    labelIcon: canvas.colors.frenchVanilla100,
    labelIconHover: 'currentColor',
    labelIconActive: canvas.colors.frenchVanilla100,
    labelIconFocus: canvas.colors.frenchVanilla100,
    labelIconDisabled: 'rgba(255, 255, 255, 0.5)'
}, _a[TextButtonVariant.AllCaps] = null, _a[TextButtonVariant.InverseAllCaps] = null, _a[IconButtonVariant.Square] = {
    background: 'transparent',
    activeBackground: canvas.colors.soap500,
    disabledBackground: 'transparent',
    focusBackground: canvas.colors.soap300,
    hoverBackground: canvas.colors.soap300,
    labelIcon: canvas.colors.licorice200,
    labelIconHover: canvas.colors.licorice500,
    labelIconActive: canvas.colors.licorice500,
    labelIconFocus: canvas.colors.licorice500,
    labelIconFocusHover: canvas.colors.licorice500,
    labelIconDisabled: canvas.colors.soap600
}, _a[IconButtonVariant.SquareFilled] = {
    background: canvas.colors.soap200,
    border: canvas.colors.soap500,
    activeBackground: canvas.colors.soap500,
    disabledBackground: canvas.colors.soap100,
    focusBackground: canvas.colors.soap400,
    hoverBackground: canvas.colors.soap400,
    labelIcon: canvas.colors.licorice200,
    labelIconHover: canvas.colors.licorice500,
    labelIconActive: canvas.colors.licorice500,
    labelIconFocus: canvas.colors.licorice500,
    labelIconDisabled: canvas.colors.soap600
}, _a[IconButtonVariant.Plain] = {
    background: 'transparent',
    activeBackground: 'transparent',
    activeBorder: 'transparent',
    disabledBackground: 'transparent',
    focusBackground: 'transparent',
    hoverBackground: 'transparent',
    labelIcon: canvas.colors.licorice200,
    labelIconHover: canvas.colors.licorice500,
    labelIconActive: canvas.colors.licorice500,
    labelIconFocus: canvas.colors.licorice500,
    labelIconDisabled: canvas.colors.soap600
}, _a[IconButtonVariant.Circle] = {
    background: 'transparent',
    activeBackground: canvas.colors.soap500,
    disabledBackground: 'transparent',
    focusBackground: canvas.colors.soap300,
    hoverBackground: canvas.colors.soap300,
    labelIcon: canvas.colors.licorice200,
    labelIconHover: canvas.colors.licorice500,
    labelIconActive: canvas.colors.licorice500,
    labelIconFocusHover: canvas.colors.licorice500,
    labelIconFocus: canvas.colors.licorice500,
    labelIconDisabled: canvas.colors.soap600
}, _a[IconButtonVariant.CircleFilled] = {
    background: canvas.colors.soap200,
    activeBackground: canvas.colors.soap500,
    disabledBackground: canvas.colors.soap100,
    hoverBackground: canvas.colors.soap400,
    focusBackground: canvas.colors.soap400,
    labelIcon: canvas.colors.licorice200,
    labelIconHover: canvas.colors.licorice500,
    labelIconFocus: canvas.colors.licorice500,
    labelIconActive: canvas.colors.licorice500,
    labelIconDisabled: canvas.colors.soap600
}, _a[IconButtonVariant.Inverse] = {
    background: 'transparent',
    activeBackground: 'rgba(0, 0, 0, 0.3)',
    focusBackground: 'rgba(0, 0, 0, 0.2)',
    disabledBackground: 'transparent',
    hoverBackground: 'rgba(0, 0, 0, 0.2)',
    labelIcon: canvas.colors.frenchVanilla100,
    labelIconHover: canvas.colors.frenchVanilla100,
    labelIconActive: canvas.colors.frenchVanilla100,
    labelIconFocus: canvas.colors.frenchVanilla100,
    labelIconDisabled: 'rgba(255, 255, 255, 0.75)',
    focusRingInner: 'currentColor',
    focusBorder: 'transparent',
    focusRingOuter: canvas.colors.frenchVanilla100,
    focusHover: 'rgba(0, 0, 0, 0.3)'
}, _a[IconButtonVariant.InverseFilled] = {
    background: 'rgba(0, 0, 0, 0.2)',
    activeBackground: 'rgba(0, 0, 0, 0.4)',
    focusBackground: 'rgba(0, 0, 0, 0.2)',
    disabledBackground: 'rgba(0, 0, 0, 0.2)',
    hoverBackground: 'rgba(0, 0, 0, 0.3)',
    labelIcon: canvas.colors.frenchVanilla100,
    labelIconHover: canvas.colors.frenchVanilla100,
    labelIconActive: canvas.colors.frenchVanilla100,
    labelIconFocus: canvas.colors.frenchVanilla100,
    labelIconDisabled: 'rgba(255, 255, 255, 0.75)',
    focusRingInner: 'currentColor',
    focusBorder: 'transparent',
    focusRingOuter: canvas.colors.frenchVanilla100,
    focusHover: 'rgba(0, 0, 0, 0.3)'
}, _a);
export default ButtonColors;