import _styled from '@emotion/styled-base';
var __extends = this && this.__extends || function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
            d.__proto__ = b;
        } || function (d, b) {
            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var _a;
import * as React from 'react';

import { spacing, borderRadius } from '@workday/canvas-kit-react-core';
import IconButton, { iconButtonIdentifier } from './IconButton';
var Container = /*#__PURE__*/_styled('div', {
    target: 'e12u9c0e0',
    label: 'Container'
})((_a = {}, _a["." + iconButtonIdentifier] = {
    borderRadius: borderRadius.zero,
    borderWidth: '1px',
    marginLeft: '-1px',
    '&:first-child': {
        borderTopLeftRadius: spacing.xxxs,
        borderBottomLeftRadius: spacing.xxxs,
        marginLeft: 0
    },
    '&:last-child': {
        borderTopRightRadius: spacing.xxxs,
        borderBottomRightRadius: spacing.xxxs
    },
    '&:focus': {
        borderRadius: spacing.xxxs,
        zIndex: 1,
        animation: 'none',
        transition: 'all 120ms, border-radius 1ms'
    }
}, _a), process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkljb25CdXR0b25Ub2dnbGVHcm91cC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQmdCIiwiZmlsZSI6Ikljb25CdXR0b25Ub2dnbGVHcm91cC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9hO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgc3BhY2luZywgYm9yZGVyUmFkaXVzIH0gZnJvbSAnQHdvcmtkYXkvY2FudmFzLWtpdC1yZWFjdC1jb3JlJztcbmltcG9ydCBJY29uQnV0dG9uLCB7IGljb25CdXR0b25JZGVudGlmaWVyIH0gZnJvbSAnLi9JY29uQnV0dG9uJztcbnZhciBDb250YWluZXIgPSBzdHlsZWQoJ2RpdicpKChfYSA9IHt9LFxuICAgIF9hW1wiLlwiICsgaWNvbkJ1dHRvbklkZW50aWZpZXJdID0ge1xuICAgICAgICBib3JkZXJSYWRpdXM6IGJvcmRlclJhZGl1cy56ZXJvLFxuICAgICAgICBib3JkZXJXaWR0aDogJzFweCcsXG4gICAgICAgIG1hcmdpbkxlZnQ6ICctMXB4JyxcbiAgICAgICAgJyY6Zmlyc3QtY2hpbGQnOiB7XG4gICAgICAgICAgICBib3JkZXJUb3BMZWZ0UmFkaXVzOiBzcGFjaW5nLnh4eHMsXG4gICAgICAgICAgICBib3JkZXJCb3R0b21MZWZ0UmFkaXVzOiBzcGFjaW5nLnh4eHMsXG4gICAgICAgICAgICBtYXJnaW5MZWZ0OiAwLFxuICAgICAgICB9LFxuICAgICAgICAnJjpsYXN0LWNoaWxkJzoge1xuICAgICAgICAgICAgYm9yZGVyVG9wUmlnaHRSYWRpdXM6IHNwYWNpbmcueHh4cyxcbiAgICAgICAgICAgIGJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzOiBzcGFjaW5nLnh4eHMsXG4gICAgICAgIH0sXG4gICAgICAgICcmOmZvY3VzJzoge1xuICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiBzcGFjaW5nLnh4eHMsXG4gICAgICAgICAgICB6SW5kZXg6IDEsXG4gICAgICAgICAgICBhbmltYXRpb246ICdub25lJyxcbiAgICAgICAgICAgIHRyYW5zaXRpb246ICdhbGwgMTIwbXMsIGJvcmRlci1yYWRpdXMgMW1zJyxcbiAgICAgICAgfSxcbiAgICB9LFxuICAgIF9hKSk7XG52YXIgSWNvbkJ1dHRvblRvZ2dsZUdyb3VwID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoSWNvbkJ1dHRvblRvZ2dsZUdyb3VwLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEljb25CdXR0b25Ub2dnbGVHcm91cCgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLnJlbmRlckNoaWxkID0gZnVuY3Rpb24gKGNoaWxkLCBpbmRleCkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBjaGlsZC50eXBlID09PSB0eXBlb2YgSWNvbkJ1dHRvbikge1xuICAgICAgICAgICAgICAgIHZhciBjaGlsZFByb3BzID0gY2hpbGQucHJvcHM7XG4gICAgICAgICAgICAgICAgdmFyIHRvZ2dsZWQgPSB0eXBlb2YgX3RoaXMucHJvcHMudmFsdWUgPT09ICdudW1iZXInXG4gICAgICAgICAgICAgICAgICAgID8gaW5kZXggPT09IF90aGlzLnByb3BzLnZhbHVlXG4gICAgICAgICAgICAgICAgICAgIDogY2hpbGRQcm9wcy52YWx1ZSA9PT0gX3RoaXMucHJvcHMudmFsdWU7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNsb25lRWxlbWVudChjaGlsZCwge1xuICAgICAgICAgICAgICAgICAgICB0b2dnbGVkOiB0b2dnbGVkLFxuICAgICAgICAgICAgICAgICAgICB2YXJpYW50OiBJY29uQnV0dG9uLlZhcmlhbnQuU3F1YXJlRmlsbGVkLFxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiBfdGhpcy5vbkJ1dHRvbkNsaWNrLmJpbmQoX3RoaXMsIGNoaWxkUHJvcHMub25DbGljaywgaW5kZXgpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNoaWxkO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5vbkJ1dHRvbkNsaWNrID0gZnVuY3Rpb24gKGV4aXN0aW5nT25DbGljaywgaW5kZXgsIGV2ZW50KSB7XG4gICAgICAgICAgICBpZiAoZXhpc3RpbmdPbkNsaWNrKSB7XG4gICAgICAgICAgICAgICAgZXhpc3RpbmdPbkNsaWNrKGV2ZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciB0YXJnZXQgPSBldmVudC5jdXJyZW50VGFyZ2V0O1xuICAgICAgICAgICAgaWYgKHRhcmdldCAmJiBfdGhpcy5wcm9wcy5vbkNoYW5nZSkge1xuICAgICAgICAgICAgICAgIGlmICh0YXJnZXQudmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMucHJvcHMub25DaGFuZ2UodGFyZ2V0LnZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnByb3BzLm9uQ2hhbmdlKGluZGV4KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgSWNvbkJ1dHRvblRvZ2dsZUdyb3VwLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBjaGlsZHJlbiA9IHRoaXMucHJvcHMuaXNSVEwgPyB0aGlzLnByb3BzLmNoaWxkcmVuLnNsaWNlKCkucmV2ZXJzZSgpIDogdGhpcy5wcm9wcy5jaGlsZHJlbjtcbiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGFpbmVyLCBudWxsLCBSZWFjdC5DaGlsZHJlbi5tYXAoY2hpbGRyZW4sIHRoaXMucmVuZGVyQ2hpbGQpKTtcbiAgICB9O1xuICAgIEljb25CdXR0b25Ub2dnbGVHcm91cC5kZWZhdWx0UHJvcHMgPSB7XG4gICAgICAgIHZhbHVlOiAwLFxuICAgIH07XG4gICAgcmV0dXJuIEljb25CdXR0b25Ub2dnbGVHcm91cDtcbn0oUmVhY3QuQ29tcG9uZW50KSk7XG5leHBvcnQgZGVmYXVsdCBJY29uQnV0dG9uVG9nZ2xlR3JvdXA7XG4iXX0= */');
var IconButtonToggleGroup = function (_super) {
    __extends(IconButtonToggleGroup, _super);
    function IconButtonToggleGroup() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.renderChild = function (child, index) {
            if (typeof child.type === typeof IconButton) {
                var childProps = child.props;
                var toggled = typeof _this.props.value === 'number' ? index === _this.props.value : childProps.value === _this.props.value;
                return React.cloneElement(child, {
                    toggled: toggled,
                    variant: IconButton.Variant.SquareFilled,
                    onClick: _this.onButtonClick.bind(_this, childProps.onClick, index)
                });
            }
            return child;
        };
        _this.onButtonClick = function (existingOnClick, index, event) {
            if (existingOnClick) {
                existingOnClick(event);
            }
            var target = event.currentTarget;
            if (target && _this.props.onChange) {
                if (target.value) {
                    _this.props.onChange(target.value);
                } else {
                    _this.props.onChange(index);
                }
            }
        };
        return _this;
    }
    IconButtonToggleGroup.prototype.render = function () {
        var children = this.props.isRTL ? this.props.children.slice().reverse() : this.props.children;
        return React.createElement(Container, null, React.Children.map(children, this.renderChild));
    };
    IconButtonToggleGroup.defaultProps = {
        value: 0
    };
    return IconButtonToggleGroup;
}(React.Component);
export default IconButtonToggleGroup;