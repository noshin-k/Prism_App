import * as React from 'react';
import { IconButtonVariant, IconButtonSize } from './types';
import { CanvasSystemIcon } from '@workday/design-assets-types';
export interface IconButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {
    variant: IconButtonVariant;
    'aria-label': string;
    size?: IconButtonSize;
    toggled?: boolean;
    buttonRef?: React.Ref<HTMLButtonElement>;
    icon?: CanvasSystemIcon;
    onToggleChange?: (toggled: boolean | undefined) => void;
}
export declare const iconButtonIdentifier = "wdc-ckr-icon-button";
export declare const IconButtonCon: import("@emotion/styled-base").StyledComponent<React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, IconButtonProps, import("@workday/canvas-kit-labs-react-core").CanvasTheme>;
export default class IconButton extends React.Component<IconButtonProps> {
    static Variant: typeof IconButtonVariant;
    static Size: typeof IconButtonSize;
    static defaultProps: {
        readonly variant: IconButtonVariant.Circle;
        readonly size: IconButtonSize.Medium;
    };
    componentDidUpdate(prevProps: IconButtonProps): void;
    render(): JSX.Element;
}
