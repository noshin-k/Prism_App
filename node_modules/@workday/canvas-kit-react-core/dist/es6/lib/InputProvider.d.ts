import * as React from 'react';
export interface InputProviderProps {
    provideIntent?: boolean;
}
export interface InputProviderState {
    currentInput: InputType;
    currentIntent: InputType;
    supportsPassive: boolean;
    isBuffering: boolean;
    isScrolling: boolean;
    mousePosX: number | null;
    mousePosY: number | null;
    nested: boolean;
}
export declare enum InputType {
    Initial = "initial",
    Keyboard = "keyboard",
    Mouse = "mouse",
    Pointer = "pointer",
    Touch = "touch"
}
export declare enum InputEventType {
    KeyDown = "keydown",
    KeyUp = "keyup",
    MouseDown = "mousedown",
    MouseMove = "mousemove",
    Wheel = "wheel",
    MouseWheel = "mousewheel",
    DOMMouseScroll = "DOMMouseScroll",
    MSPointerDown = "MSPointerDown",
    MSPointerMove = "MSPointerMove",
    PointerDown = "pointerdown",
    PointerMove = "pointermove",
    TouchStart = "touchstart"
}
declare type InputEvent = Event | React.KeyboardEvent | React.MouseEvent | React.TouchEvent | React.PointerEvent;
declare global {
    interface Window {
        PointerEvent(): void;
        MSPointerEvent(): void;
    }
    interface Document {
        onmousewheel(): void;
    }
}
export declare const inputEventMap: {
    [InputEventType.KeyDown]: InputType;
    [InputEventType.KeyUp]: InputType;
    [InputEventType.MouseDown]: InputType;
    [InputEventType.MouseMove]: InputType;
    [InputEventType.Wheel]: InputType;
    [InputEventType.MouseWheel]: InputType;
    [InputEventType.DOMMouseScroll]: InputType;
    [InputEventType.MSPointerDown]: InputType;
    [InputEventType.MSPointerMove]: InputType;
    [InputEventType.PointerDown]: InputType;
    [InputEventType.PointerMove]: InputType;
    [InputEventType.TouchStart]: InputType;
};
export default class InputProvider extends React.Component<InputProviderProps, InputProviderState> {
    private eventTimer;
    private ref;
    constructor(props: any);
    provideIntent: boolean | undefined;
    componentDidMount(): void;
    componentDidUpdate(): void;
    componentWillUnmount(): void;
    shouldComponentUpdate(nextProps: {}, nextState: InputProviderState): boolean;
    enableListeners(enable: boolean): void;
    setInput(event: InputEvent): void;
    setIntent(event: InputEvent): void;
    eventBuffer(event: Event): void;
    detectScrolling(event: React.MouseEvent): void;
    render(): {} | null | undefined;
}
export {};
