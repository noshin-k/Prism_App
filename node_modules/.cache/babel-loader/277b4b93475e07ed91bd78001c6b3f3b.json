{"ast":null,"code":"var _jsxFileName = \"/Users/noshin.kamal/Desktop/app/src/DisplayTable.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Column, Table, SortDirection, AutoSizer } from \"react-virtualized\";\nimport \"./index.css\";\nimport \"react-virtualized/styles.css\";\nimport _ from \"lodash\";\n\nclass DisplayTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._sortList = ({\n      sortBy,\n      sortDirection\n    }) => {\n      let newList = _.sortBy(list, [sortBy]);\n\n      if (sortDirection === SortDirection.DESC) {\n        newList.reverse();\n      }\n\n      return newList;\n    };\n\n    this._sort = ({\n      sortBy,\n      sortDirection\n    }) => {\n      const sortedList = this._sortList({\n        sortBy,\n        sortDirection\n      });\n\n      this.setState({\n        sortBy,\n        sortDirection,\n        sortedList\n      });\n    };\n\n    const _sortBy = \"name\";\n    const _sortDirection = SortDirection.ASC;\n\n    const _sortedList = this._sortList({\n      sortBy: _sortBy,\n      sortDirection: _sortDirection\n    });\n\n    this.state = {\n      sortBy: _sortBy,\n      sortDirection: _sortDirection,\n      sortedList: _sortedList\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 400\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AutoSizer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, ({\n      height,\n      width\n    }) => /*#__PURE__*/React.createElement(Table, {\n      width: width,\n      height: height,\n      headerHeight: 20,\n      rowHeight: 30,\n      sort: this._sort,\n      sortBy: this.state.sortBy,\n      sortDirection: this.state.sortDirection,\n      rowCount: this.state.sortedList.length,\n      rowGetter: ({\n        index\n      }) => this.state.sortedList[index],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      label: \"Table Name\",\n      dataKey: \"name\",\n      width: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      width: 300,\n      label: \"Version\",\n      dataKey: \"version\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      width: 300,\n      label: \"Schema\",\n      dataKey: \"schema\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n} // Render your table\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));\nexport default DisplayTable;","map":{"version":3,"sources":["/Users/noshin.kamal/Desktop/app/src/DisplayTable.js"],"names":["React","ReactDOM","Column","Table","SortDirection","AutoSizer","_","DisplayTable","Component","constructor","props","_sortList","sortBy","sortDirection","newList","list","DESC","reverse","_sort","sortedList","setState","ASC","state","render","height","width","length","index","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Column, Table, SortDirection, AutoSizer } from \"react-virtualized\";\nimport \"./index.css\";\nimport \"react-virtualized/styles.css\";\nimport _ from \"lodash\";\n\nclass DisplayTable extends React.Component {\n  constructor(props) {\n    super(props);\n    const sortBy = \"name\";\n    const sortDirection = SortDirection.ASC;\n    const sortedList = this._sortList({ sortBy, sortDirection });\n\n    this.state = {\n      sortBy,\n      sortDirection,\n      sortedList\n    };\n  }\n\n  render() {\n    return (\n      <div style={{ height: 400 }}>\n        <AutoSizer>\n          {({ height, width }) => (\n            <Table\n              width={width}\n              height={height}\n              headerHeight={20}\n              rowHeight={30}\n              sort={this._sort}\n              sortBy={this.state.sortBy}\n              sortDirection={this.state.sortDirection}\n              rowCount={this.state.sortedList.length}\n              rowGetter={({ index }) => this.state.sortedList[index]}\n            >\n              <Column label=\"Table Name\" dataKey=\"name\" width={200} />\n              <Column width={300} label=\"Version\" dataKey=\"version\" />\n              <Column width={300} label=\"Schema\" dataKey=\"schema\" />\n            </Table>\n          )}\n        </AutoSizer>\n      </div>\n    );\n  }\n\n  _sortList = ({ sortBy, sortDirection }) => {\n    let newList = _.sortBy(list, [sortBy]);\n    if (sortDirection === SortDirection.DESC) {\n      newList.reverse();\n    }\n    return newList;\n  };\n\n  _sort = ({ sortBy, sortDirection }) => {\n    const sortedList = this._sortList({ sortBy, sortDirection });\n    this.setState({ sortBy, sortDirection, sortedList });\n  };\n}\n\n// Render your table\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nexport default DisplayTable;\n"]},"metadata":{},"sourceType":"module"}