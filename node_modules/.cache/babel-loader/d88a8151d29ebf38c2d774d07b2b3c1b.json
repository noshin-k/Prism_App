{"ast":null,"code":"var _jsxFileName = \"/Users/noshin.kamal/Desktop/Prism_App/src/DisplayTable.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Column, Table, AutoSizer } from \"react-virtualized\";\nimport \"./index.css\";\nimport \"react-virtualized/styles.css\";\nimport _ from \"lodash\";\n\nclass DisplayTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const list = [{\n      name: 'Table 1',\n      version: 'Version 1',\n      schema: 'SWH'\n    }, {\n      name: 'Table 2',\n      version: 'Version 2',\n      schema: 'SWH'\n    }];\n    return /*#__PURE__*/React.createElement(Table, {\n      width: 300,\n      height: 400,\n      headerHeight: 20,\n      rowHeight: 30,\n      rowCount: list.length,\n      rowGetter: ({\n        index\n      }) => list[index],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      label: \"Table Name\",\n      dataKey: \"name\",\n      width: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      width: 300,\n      label: \"Version\",\n      dataKey: \"version\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      width: 300,\n      label: \"Schema\",\n      dataKey: \"schema\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default DisplayTable;","map":{"version":3,"sources":["/Users/noshin.kamal/Desktop/Prism_App/src/DisplayTable.js"],"names":["React","ReactDOM","Column","Table","AutoSizer","_","DisplayTable","Component","constructor","props","state","render","list","name","version","schema","length","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,SAAxB,QAAyC,mBAAzC;AACA,OAAO,aAAP;AACA,OAAO,8BAAP;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa,EAAb;AAED;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,CACT;AAACC,MAAAA,IAAI,EAAE,SAAP;AAAkBC,MAAAA,OAAO,EAAE,WAA3B;AAAwCC,MAAAA,MAAM,EAAE;AAAhD,KADS,EAET;AAACF,MAAAA,IAAI,EAAE,SAAP;AAAkBC,MAAAA,OAAO,EAAE,WAA3B;AAAwCC,MAAAA,MAAM,EAAE;AAAhD,KAFS,CAAb;AAKA,wBACA,oBAAC,KAAD;AACI,MAAA,KAAK,EAAE,GADX;AAEI,MAAA,MAAM,EAAE,GAFZ;AAGI,MAAA,YAAY,EAAE,EAHlB;AAII,MAAA,SAAS,EAAE,EAJf;AAKI,MAAA,QAAQ,EAAEH,IAAI,CAACI,MALnB;AAMI,MAAA,SAAS,EAAE,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAeL,IAAI,CAACK,KAAD,CANlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,YAAd;AAA2B,MAAA,OAAO,EAAC,MAAnC;AAA0C,MAAA,KAAK,EAAE,GAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,eAQI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,GAAf;AAAoB,MAAA,KAAK,EAAC,SAA1B;AAAoC,MAAA,OAAO,EAAC,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,eASI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,GAAf;AAAoB,MAAA,KAAK,EAAC,QAA1B;AAAmC,MAAA,OAAO,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADA;AAaD;;AA3BwC;;AA+B3C,eAAeX,YAAf","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Column, Table, AutoSizer } from \"react-virtualized\";\nimport \"./index.css\";\nimport \"react-virtualized/styles.css\";\nimport _ from \"lodash\";\n\nclass DisplayTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n    const list = [\n        {name: 'Table 1', version: 'Version 1', schema: 'SWH'},\n        {name: 'Table 2', version: 'Version 2', schema: 'SWH'},\n      ];\n\n    return (\n    <Table\n        width={300}\n        height={400}\n        headerHeight={20}\n        rowHeight={30}\n        rowCount={list.length}\n        rowGetter={({ index }) => list[index]}>\n        <Column label=\"Table Name\" dataKey=\"name\" width={200} />\n        <Column width={300} label=\"Version\" dataKey=\"version\" />\n        <Column width={300} label=\"Schema\" dataKey=\"schema\" />\n    </Table>\n    );\n  }\n\n}\n\nexport default DisplayTable;\n"]},"metadata":{},"sourceType":"module"}