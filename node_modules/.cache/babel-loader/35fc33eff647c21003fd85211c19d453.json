{"ast":null,"code":"import { keyframes } from '@emotion/core';\nimport canvas from '@workday/canvas-kit-react-core';\nimport memoize from 'lodash/memoize';\n\nfunction calculateFocusRing(_a) {\n  var ringWidth = _a.ringWidth,\n      separationWidth = _a.separationWidth,\n      animate = _a.animate,\n      inset = _a.inset,\n      innerShadowColor = _a.innerShadowColor,\n      outerShadowColor = _a.outerShadowColor;\n  var endingInnerShadow = (inset ? 'inset ' : '') + '0 0 0 ' + separationWidth + 'px ' + innerShadowColor;\n  var endingOuterShadow = (inset ? 'inset ' : '') + '0 0 0 ' + (ringWidth + separationWidth) + 'px ' + outerShadowColor;\n  var endingBoxShadow = inset ? \"\" + endingOuterShadow : endingInnerShadow + \", \" + endingOuterShadow;\n\n  if (animate) {\n    var fadeIn = keyframes({\n      '0%': {\n        boxShadow: endingBoxShadow\n      },\n      '100%': {\n        boxShadow: endingBoxShadow\n      }\n    });\n    return {\n      animation: fadeIn + \" 100ms\",\n      boxShadow: endingBoxShadow\n    };\n  }\n\n  return {\n    boxShadow: endingBoxShadow\n  };\n}\n\nexport var memoizedFocusRing = memoize(calculateFocusRing, function () {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return JSON.stringify(args);\n});\nexport default function focusRing(ringWidth, separationWidth, animate, inset, innerShadowColor, outerShadowColor, memoizeCalculation) {\n  if (ringWidth === void 0) {\n    ringWidth = 2;\n  }\n\n  if (separationWidth === void 0) {\n    separationWidth = 0;\n  }\n\n  if (animate === void 0) {\n    animate = true;\n  }\n\n  if (inset === void 0) {\n    inset = false;\n  }\n\n  if (innerShadowColor === void 0) {\n    innerShadowColor = canvas.colors.frenchVanilla100;\n  }\n\n  if (outerShadowColor === void 0) {\n    outerShadowColor = canvas.commonColors.focusOutline;\n  }\n\n  if (memoizeCalculation === void 0) {\n    memoizeCalculation = true;\n  }\n\n  var argsToPass = {\n    ringWidth: ringWidth,\n    separationWidth: separationWidth,\n    animate: animate,\n    inset: inset,\n    innerShadowColor: innerShadowColor,\n    outerShadowColor: outerShadowColor\n  };\n\n  if (memoizeCalculation) {\n    return memoizedFocusRing(argsToPass);\n  }\n\n  return calculateFocusRing(argsToPass);\n}\nexport function themedFocusRing(theme, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _a = options.width,\n      width = _a === void 0 ? 2 : _a,\n      _b = options.separation,\n      separation = _b === void 0 ? 0 : _b,\n      _c = options.animate,\n      animate = _c === void 0 ? true : _c,\n      _d = options.inset,\n      inset = _d === void 0 ? false : _d,\n      _e = options.innerColor,\n      innerColor = _e === void 0 ? canvas.colors.frenchVanilla100 : _e,\n      _f = options.outerColor,\n      outerColor = _f === void 0 ? theme.palette.common.focusOutline : _f,\n      _g = options.memoize,\n      memoize = _g === void 0 ? true : _g;\n  var args = {\n    ringWidth: width,\n    separationWidth: separation,\n    innerShadowColor: innerColor,\n    outerShadowColor: outerColor,\n    animate: animate,\n    inset: inset\n  };\n\n  if (memoize) {\n    return memoizedFocusRing(args);\n  }\n\n  return calculateFocusRing(args);\n}","map":{"version":3,"sources":["/Users/noshin.kamal/Desktop/Prism_App/node_modules/@workday/canvas-kit-react-common/dist/es6/lib/styles/focusRing.js"],"names":["keyframes","canvas","memoize","calculateFocusRing","_a","ringWidth","separationWidth","animate","inset","innerShadowColor","outerShadowColor","endingInnerShadow","endingOuterShadow","endingBoxShadow","fadeIn","boxShadow","animation","memoizedFocusRing","args","_i","arguments","length","JSON","stringify","focusRing","memoizeCalculation","colors","frenchVanilla100","commonColors","focusOutline","argsToPass","themedFocusRing","theme","options","width","_b","separation","_c","_d","_e","innerColor","_f","outerColor","palette","common","_g"],"mappings":"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","sourcesContent":["import { keyframes } from '@emotion/core';\nimport canvas from '@workday/canvas-kit-react-core';\nimport memoize from 'lodash/memoize';\nfunction calculateFocusRing(_a) {\n    var ringWidth = _a.ringWidth, separationWidth = _a.separationWidth, animate = _a.animate, inset = _a.inset, innerShadowColor = _a.innerShadowColor, outerShadowColor = _a.outerShadowColor;\n    var endingInnerShadow = (inset ? 'inset ' : '') + '0 0 0 ' + separationWidth + 'px ' + innerShadowColor;\n    var endingOuterShadow = (inset ? 'inset ' : '') + '0 0 0 ' + (ringWidth + separationWidth) + 'px ' + outerShadowColor;\n    var endingBoxShadow = inset\n        ? \"\" + endingOuterShadow\n        : endingInnerShadow + \", \" + endingOuterShadow;\n    if (animate) {\n        var fadeIn = keyframes({\n            '0%': { boxShadow: endingBoxShadow },\n            '100%': { boxShadow: endingBoxShadow },\n        });\n        return { animation: fadeIn + \" 100ms\", boxShadow: endingBoxShadow };\n    }\n    return { boxShadow: endingBoxShadow };\n}\nexport var memoizedFocusRing = memoize(calculateFocusRing, function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return JSON.stringify(args);\n});\nexport default function focusRing(ringWidth, separationWidth, animate, inset, innerShadowColor, outerShadowColor, memoizeCalculation) {\n    if (ringWidth === void 0) { ringWidth = 2; }\n    if (separationWidth === void 0) { separationWidth = 0; }\n    if (animate === void 0) { animate = true; }\n    if (inset === void 0) { inset = false; }\n    if (innerShadowColor === void 0) { innerShadowColor = canvas.colors.frenchVanilla100; }\n    if (outerShadowColor === void 0) { outerShadowColor = canvas.commonColors.focusOutline; }\n    if (memoizeCalculation === void 0) { memoizeCalculation = true; }\n    var argsToPass = {\n        ringWidth: ringWidth,\n        separationWidth: separationWidth,\n        animate: animate,\n        inset: inset,\n        innerShadowColor: innerShadowColor,\n        outerShadowColor: outerShadowColor,\n    };\n    if (memoizeCalculation) {\n        return memoizedFocusRing(argsToPass);\n    }\n    return calculateFocusRing(argsToPass);\n}\nexport function themedFocusRing(theme, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.width, width = _a === void 0 ? 2 : _a, _b = options.separation, separation = _b === void 0 ? 0 : _b, _c = options.animate, animate = _c === void 0 ? true : _c, _d = options.inset, inset = _d === void 0 ? false : _d, _e = options.innerColor, innerColor = _e === void 0 ? canvas.colors.frenchVanilla100 : _e, _f = options.outerColor, outerColor = _f === void 0 ? theme.palette.common.focusOutline : _f, _g = options.memoize, memoize = _g === void 0 ? true : _g;\n    var args = {\n        ringWidth: width,\n        separationWidth: separation,\n        innerShadowColor: innerColor,\n        outerShadowColor: outerColor,\n        animate: animate,\n        inset: inset,\n    };\n    if (memoize) {\n        return memoizedFocusRing(args);\n    }\n    return calculateFocusRing(args);\n}\n"]},"metadata":{},"sourceType":"module"}